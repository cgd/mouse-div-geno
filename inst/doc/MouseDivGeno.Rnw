\documentclass[11pt]{article}

\usepackage{graphics,amsmath}
\usepackage{hyperref}
\usepackage[authoryear,round]{natbib}
\usepackage{Sweave}

\textwidth=6.2in
\textheight=8.5in
%\parskip=.3cm
\oddsidemargin=.1in
\evensidemargin=.1in
\headheight=-.3in

\newcommand{\scscst}{\scriptscriptstyle}
\newcommand{\scst}{\scriptstyle}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}

\author{Hyuna Yang}
\begin{document}
\title{MouseDivGeno - R package}

\maketitle
%\tableofcontents

\section{Introduction}
{\tt MouseDivGeno} is a R package specifically designed to genotype the Mouse Diversity Array, an Affymetrix Mouse  genotyping array equivalent to human SNP 6.0. MouseDivGeno can normalize Mouse Diversity Array, genotype, and identify probe sets potentially harboring a new mutation (variable intensity oligonucleotide or VINO, here we call vinotyping) or deletion. Normlization steps are highly customized and designed for the MouseDivGeno, and genotyping and vinotyping functions can be applied to other genotyping arrays for other species such as human, dog or horse. R package, updated annotation and further information can be obtained from the \\{\tt http://genomedynamics.org/tools/MouseDivGeno}.
 
\section{Installation}
{\tt MouseDivGeno} was developed under the {\em R 2.10.0}, and it is assumed that you already install R. If not, visit {\tt http://cran.r-project.org}.
 
First download the {\tt MouseDivGeno} from the \\{\tt http://genomedynamics.org/tools/MouseDivGeno}. If you want to genotype the Mouse Diversity Array, you also need to obtain all annotation files under the \\{\tt http://genomedynamics.org/tools/MouseDivGeno/CDFfiles}. Those files are necessary for the normalization step. If you obtained normalized log2 intensities using other softwares, and want to use {\em MouseDivGeno} for genotyping purpose only, you do not need to obtain those annotation files. In that case, skip the section 3 and refer to section 4.  
\subsection{Installation - Windows(9x/NT/2000)}
\begin{enumerate}
\item Start Rgui
\item Select Menu {\tt Packages}, click {\tt Install package from local zip file}. Choose the file \\{\tt MouseDivGeno\_*.tar.gz} and click 'OK'.
\end{enumerate}
\subsection{Installation - Linux/Unix}
\begin{enumerate}
\item Go into the directory containing {\tt MouseDivGeno\_*.tar.gz}.
\item Type \Rfunction{R CMD INSTALL MouseDivGeno} to have the package installed in
  the standard location such like {\tt /usr/lib/R/library}. You will have to
  be the superuser to do this. As a normal user, you can install the package
  in your own local directory. To do this, type \Rfunction{R CMD INSTALL --library=\$LOCALRLIB MouseDivGeno\_*.tar.gz},
where {\tt \$LOCALRLIB} is something like {\tt /home/user/Rlib/}. Then you
will need to create a file {\tt .Renviron} in your home directory to contain
the line {\tt R\_LIBS=/home/user/Rlib} so that R will know to search for packages in that directory.
\end{enumerate}
 
You also need to install three R packages; {\tt affyio}, {\tt preprocessCore}, and {\tt cluster}. Easiest way to do it would start R and type
\begin{Sinput}
R> install.packages('cluster')
R> source("http://bioconductor.org/biocLite.R")
R> biocLite("preprocessCore")
R> biocLite("affyid")
\end{Sinput}
 
\section{Qick Start - to genotype Mouse Diversity Genotyping Array}
{\tt MouseDivGenotype} is a R function highly customized for the Mouse Diversity Genotyping Array. It reads the .CEL files, normalized and genotype them. To learn more about each steps, refer to Section 4. To use this function, you need to install the {\tt MouseDivGeno} R package and download all files under the \\{\tt http://genomedynamics.org/tools/MouseDivGeno/CDFfiles}. Next, you need to identify .CEL files that you want to genotype. This can be done in two ways; place all .CEL files under one directory and specify that directory at the {\tt celfiledir}, or make a {\tt celname} file, a tab delimited file listing all .CEL file names, and specify the name of the celname file at the {\tt celfilename} and directory location at the at the {\tt celfiledir}. If you do not specify the {\tt celname} file at the {\tt celfilename}, it reads all .CEL files under the {\tt celfiledir}, and if {\tt celfiledir} is not specified, it reads all .CEL files under the current working directory. Table 1 shows one example of {\tt celname} file. The first column of the file must list .CEL file names, and the column header must be 'celfile'. Optionally gender information can be specified at the second column with a column header 'geneder'. Gender can be identifyed as 'female' or 'male' (case sensitive), and anything else is considered as un-konwn gender. If you do not specify the gender or gender column has at least one un-known gender, the software will compute the gender based on X chromosome and Y chromosome intensities. 
\begin{table}[htb]
\begin{center}
\begin{tabular}{c|c}\hline
celfile  & gender  \\\hline
ex1.CEL & female \\
ex2.CEL & male \\
ex3.CEL & male \\
ex4.CEL & unknown \\
$\cdots$ &  $\cdots$  \\\hline
\end{tabular}\\
\caption{Example of celname file, saved as 'filenames.txt'}
\end{center}\end{table}

You need to place annotation files {\tt allid}, {\tt ABid}, and {\tt chrid} at a directory that you can load them. {\tt allid} contains all indexes corresponding to SNP probes in the .CEL file. {\tt ABid} contains indexes corresponding to A or B allele, and  {\tt chrid} contains indexes corresponding to each chromosome. {\tt CGFLcorrection} and {\tt reference} files are optional, and if they are specified, they will be used to normalized the Mouse Diversity Array. {\tt CGFLcorrection} is to correct intensity variation due to C or G contents in 25mers and restriction enzyime fragment size, and containins a set of coefficients based on spline regression model fitting. {\tt reference} contains one reference distribution used for the quantile normalization step.  Note that all these files are specifically designed for the Mouse Diversity Genotyping Array, and if you want to genotype other types of array, refer to section 4. 

MouseDivGeno genotypes the SNPs based on contrast and summation dimension, and the function offers two different transformations to obtain contrast; CCS (contrast centers stretch) transformation proposed by BRLMM-P algorithm obtains contrast via asinh(K*(A-B)/(A+B))/asinh(K), where A and B is intensity of A and B allele, K is hyperparameter, and MA transformation obtains contrast by log2(A) - log2(B). In both cases summation is defined by (log2(A) + log2(B))/2

User can identify chromosomes that you want to genotype using {\tt mchr}. Current default is {\tt mchr = c(1:19, 'X', 'Y', 'M')}.  MouseDivGeno also offers option {\tt subset}, and if {\tt subset} is TRUE, it only genotype 'good' probe sets. Those 'good' probe sets were defined based on previous experience, and may sensitive lab to lab variation.  Current 'good' probe sets are trained based on .CEL files processed at the Jackson Laboratory. Current default if FALSE.  
\begin{Sinput}
R> library(MouseDivGeno)
R> load('allid'); load('ABid'); load('chrid'); 
R> load('CGFLcorrection'); load('reference');
R> celfiledir = 'C://genotype/celfile'
R> outfiledir = 'C://genotype/outfile'
R> # if you want to genotype all .CEL files specified at the 'filenames.txt' 
# based on MA transformation with C+G or fragment length correction 
# and quantile normalization 
R> MouseDivGenotype(celfiledir, outfiledir, allid, ABid, chrid, 
   CGFLcorrection=CGFLcorrection, reference=reference, 
  trans="MAtrans", celnamefile = 'filenames.txt' , mchr = c(1:19), subset = FALSE)
R> # if you want to genotype all .CEL files under the celfiledir based on 
# CCS transformation with no C+G and fragment length, and quantile normalization 
R> MouseDivGenotype(celfiledir, outfiledir, allid, ABid, chrid, CGFLcorrection=NULL, 
  reference=NULL, trans=c("CCStrans") )
\end{Sinput}
This will return the normalized intensities, genotype, vinotype, and confidence score. 

\section{Genotype - General steps}
\subsection{Quality check and normalization}
Before genotype the data, it is always recommended to check the quality of data. The detail steps are designed for the Mouse Diversity Array, and the general ideas can be applied to other types of array.  
\begin{figure}\begin{center}
\includegraphics[width= 14cm, height=20cm, trim = 2cm 0cm 0cm 0cm]{imageplot.jpg}
\caption{ Example of {\tt imageplot}. }  
\end{center}\end{figure}
 
{\tt imageplot} returns log2 intensity heatmap (Fig 1.A) and it is a good way to check if the array has a spatial distribution.  
Since we put four probes (two from sense and two from antisense strand) per probe set and those probes are randomly located across .CEL file, even if there is a spatially dimmer region, it does not affect to the overall intensity due to median summarization step. However if some .CEL files show unusually big dark spot, or overall dark image, check the array processing steps including reagent, scanner, etc. To use {\tt imageplot}, you need to specify one .CEL filename that you want to draw impageplot, and provide plot name. If the plotname is not provided, the default is 'imageplot.jpg'
\begin{Sinput}
R> filename = '~/projects/cel/SNPex1.CEL'
R> densityplot(filename, plotname = 'myimageplot.jpg')
\end{Sinput}

{\tt densityplot} draw SNP density. Unlike {\tt imageplot} which can be used only one .CEL file,  {\tt densityplot} can draw density plots of many .CEL files at the same time. Thus this will allow users to compare density of many .CEL files. This will guide you further normalization especially for quantile normalization. If the plotname is not provided, the default is 'density.jpg'
\begin{Sinput}
R> setwd(celfiledir)
R> filenames = c('ex1.CEL', 'ex2.CEL', 'ex3.CEL')
R> densityplot(filenames)
R> # or use filename.txt file
R> filenames = read.table('filenames.txt', header = TRUE)
R> filenames = filenames[,1]
R> densityplot(filenames, plotname ='mydensity.jpg')
\end{Sinput}

\subsection{Normalization}
MouseDivGeno offers three steps of normalization: intensity variation due to C or G contents in probe sequences and restriction enzyme length correction, quantile normalization based on a reference distribution, and median summarization. Each probes of Mouse Diversity Array has different restriction enzyme fragment length and C or G contents, and it affects the intensity. To adjust those difference, we initally choose 350 .CEL files, fit a spline regression, and obtained the coefficients in each probes. These coefficitents were saved at the MouseDivGeno pacakge, and is used to normalize a new array. Quantile normalization is commonly used in microarray data to remove array specific noise, and reference distribution is often derived from the arrays that you study. However obtaining a reference distribution at each time introduces unnecessary batch effect (i.e. with which .CEL files it normliazed together, the reference distribution thus intensities will change), so we derive one reference distribution using the same 350 CEL files, and save the reference distribution to the MouseDivGeno package. Note that the quantile normalization can only be applied when samples have the same underlying distribution. If there is sample whose intensity distribution is different from that of classical inbred strains (such as C57BL/6J) then one should not use quantile normalization. {\tt densityplot} can be a useful tool to check the intensity distribution. After these normalization steps, it summarizes intensities from probes to a probe set value.  We compared intensities from sense and antisense and removed one strand extremly poorly performing strand. We removed 57,066 probes from sense strand and 61,196 probes from antisense strand. As a result for most probe set, it summarizes four probe values, but for 118,262 probe sets, it only summarize 2 probes.  Note that this does not affect the number of probe set itself. Transformation and subset options are the same as introduced at the Section 2. The example to obtain normalized intensities is following. 

\begin{Sinput}
R> library(MouseDivGeno)
R> load('allid'); load('ABid'); load('chrid'); 
R> load('CGFLcorrection'); load('reference');
R> celfiledir = 'C://genotype/celfile'
R> outfiledir = 'C://genotype/outfile'
R> ReadCelFile(celfiledir, outfiledir, allid, ABid, chrid,
   CGFLcorrection=CGFLcorrection, reference=reference, 
  trans="MAtrans", celnamefile = 'filenames.txt' , subset = FALSE)
\end{Sinput}
This will save the normalized intensities under the {\tt outfiledir}. 
 
\subsection{Genotype}
Genotype is based on a method combining EM based clustering and single linkage hierachical clustering. Detail algorithm is following.
\begin{enumerate}
\item[1.] test two groups (N = 2)
  \begin{enumerate}
  \item Find center via EM based clustering using contrast.
    \begin{enumerate}
    \item Initialization : $\mu_1$ = maximum of contrast, $\mu_2$ =  minimum of contrast, $\sigma^2_1$ = $\sigma^2_2$ = 0.1 
    \item E step : calculate $P(j|i) = exp(-(x_i-\mu_j)^2/(2*\sigma^2_j)$, where $j = 1,2$, $i = 1, \cdots, n$ ($n$ = number of samples)
    \item M step : $\mu_j = \frac{\sum w_jy_i}{ \sum w_j}$, $\sigma_j = \frac{\sum w_j*(y-\mu_j)^2}{ \sum w_j}$, and $w_j = 1/N  \sum p(j|i)$
    \end{enumerate}
  \item Assign inital genotype. This step assigns genotype only for the samples having high probability $P(j|i)$. However, when the $w_j$ is severely unbalanced, it often fails to assign at least one member to each group, so this initial genotype step also tries to assign at least one sample to each genotype. 
     \begin{enumerate}
     \item For the group having the higher $w_j$ (let's call this group $j1$, and the other group $j2$) : Threshold = median of $P(j1|i)$ only using sample $i$ whose $P(j2|i)$ <0.5.  Assign genotype $j1$ to samples $i$ if $P(j1|i)$ is bigger than threshold. 
     \item Assign genotype for group $j2$ : Threshold = find biggest mode of $P(j2|i)$ only using $i$ does not get assigned from the previous step. Also find median of $P(j2|i)$ only using $i$ whose $P(j1|i)$ <0.5. Threshold is maximum of two values.  Assign genotype $j2$ to $i$ if $P(j2|i)$ is bigger than the threshold. 
     \end{enumerate}
  \item Genotype remaining samples using single linkage hierarchical clustering 
    \begin{enumerate}
    \item Find one unassigned sample having the smallest distance to assignment sample. 
    \item Assign the unassigned sample to the same genotype which the assigned sample belongs to. 
    \item Repeat this procedure till every sample has genotype. 
     \end{enumerate}
  \end{enumerate}
\item[2] test N = 3 : same as N = 2 except now the initialization : $\mu_1$ = maximum of contrast, $\mu_2$ =  obtain from hint file or 0, and $\mu_3$ =  minimum of contrast,
\item[3] Finalize the genotype. Compare N = 3 vs. N = 2 using silhouette score and distance between 90th quantile of the previous genotype group and 10th quantile of the next genotype group. If N = 3 fails, it compares N = 2 vs. N = 1.
\end{enumerate}

\subsection{VINOtype}
When probe sequence contains new mutation, hybridazation fails and it reduces the average intensity. Depending on the nature of new mutation and the genotype of target SNP, identifying some VINO is easier than the other.  For instance when an inbred mouse has a new mutation right next to the target SNP, the hybridization failure gets noticable, thus easy to detect. One the other hand, if the new mutation occurs at the  end of the probe sequence, the hybridization failure hardley notecialb, thus difficult to detect. VINOtyping is based on low intensities and more detail algorithm is following.
 
To find VINO (variant intensity oligonecleotide), MouseDivGeno calculates product of two probabilities. P( data is not a member of AA, AB, and BB) = 1 - P (data is a member of AA, AB or BB), and P(the intensity is low).
P (data is a member of AA, AB or BB) is calculated by mohalanobis distance, and also served as a confidence score. Note that when there are many VINO it affects the mean and variance of each group, and to avoid this, first  we remove outliers and secondary cluster at the average intensity dimension, if they exists. P(the intensity is low) is based on average intensity demension only and derived by normal distribution. Again we removed the outliers and secondary cluster based on each genotype, then merge data from all genotypes to obtain the mean and variance of average intensity. Using stringent threshold, it identifies samples having extremely low intensities and using single linkage based hierachical clustering, it identifies samples cluster to the one having extremely low intensities. 
 
When MouseDivGeno genotype a probe set as VION, it implies two things. First, the genotype of the original target SNPs should be considered as no call. It is because the observed intensities reflect the dynamics between the nature of new mutation and original genotype, and both information is hidden thus it is not obvious to predict the original SNP genotype. Second, VINO indicates the hybridization fails in that probe seqeunce. Naturally, if great number of consecutive probes fail to hybridized,  it indicates a deletion. Thus vinotyping along with simple HMM can be used to detect deletion. 
 
\subsection{Sexchromosome} When the gender information is not given, MouseDivGeno compute the gender based on Y and X chromosome intensities, and X and Y chromosome genotyping are done based on gender. Pseudoautosomal region at the end of X chromosomes are treated seperately.
 
\section{Summary the result} After the genotyping is done, you can find summary.txt file at the outfiledir directiory. The file contains basic summary statistics such as call rate, heterozygosity rate, VINO rate, and computed gender information.          

\section{citation}
\section{acknowlegement}
\section{reference}
\end{document}
 
